<div class="w-full flex-col justify-center items-center">
  <%= form_with url: edit_video_post_path, method: :post, html: { class: "flex flex-col justify-center items-center w-full", id: "edit_video_form", data: { turbo: false } } do |f| %>
    <div class="edit_video_form_block mt-6 flex flex-col justify-center items-center">
      <div id="chapters-list" class="chapters-grid mt-8">
        <% @chapters.each do |chapter| %>
          <div class="project-main-block flex flex-col justify-between items-center chapter-item" data-id="<%= chapter.id %>">
            <div class="project-block">

              <div class="delete-chap-icon-btn" data-url="<%= delete_video_chapter_path(chapter.id) %>" data-confirm="Are you sure you want to delete this chapter?">
                <%= image_tag "icons/delete_icon.png", alt: "Delete Icon", class: "delete-chap-icon" %>
              </div>
              <div data-controller="dialog" data-action="click->dialog#clickOutside">
                <%= image_tag "icons/tdesign_more.png", alt: "Edit Icon", class: "edit-prof-video-icon", data: { action: "click->dialog#open" } %>
                <dialog data-dialog-target="modal" class="backdrop:bg-slate-400 backdrop:opacity-80 w-full lg:w-2/3 edit-chap-modal">
                  <div class="w-full h-full flex flex-col justify-start items-center">
                    <div class="video-memory">
                      <div class="video-memory-thumb-wrapper">
                        <% if chapter.chapter_type.image.attached? %>
                            <%= image_tag chapter.chapter_type.image, class: "h-[150px] w-[200px] object-cover rounded" %>
                        <% else %>
                            <p>Pas d'image</p>
                        <% end %>
                      </div>
                      <div class="w-full">
                        <%= f.text_field "chapters[#{chapter.id}][text]", value: chapter.text , placeholder: "Quel texte doit contenir ce chapitre ...", class: "w-full br-10" %>
                      </div>
                        <div id="edit-video-gallery-<%= chapter.id %>" class="gallery flex flex-row items-center space-x-8">
                          <% chapter.ordered_videos.each_with_index do |video, index| %>
                            <div class="edit-video-container old-video-container" data-file-name="<%= video.filename.to_s %>">
                              <%= video_tag video, controls: true, autobuffer: true %>
                              <div class="purge-attachment-icon-btn" data-url="<%= purge_chapter_attachment_path(video.id) %>">
                                <%= image_tag "icons/delete_icon.png", alt: "Delete Icon", class: "purge-chap-icon" %>
                              </div>
                            </div>
                          <% end %>
                        </div>
                        <div class="upload-attachment-block flex flex-col justify-center items-center">
                          <span class="text-center">Faites glisser ou appuyez pour ajouter vos vidéos</span>
                          <div class="upload-attachment-circle mt-2" id="customUploadButtonVideos">
                            <span class="plus-sign">+</span>
                          </div>
                          <%= f.file_field "chapters[#{chapter.id}][videos]", multiple: true, accept: 'video/*', class: 'form-control', style: 'display: none;', id: 'fileUploadInputVideos' %>
                        </div>


                        <div id="edit-photo-gallery-<%= chapter.id %>" class="gallery flex flex-row items-center space-x-8">
                          <% chapter.ordered_photos.each_with_index do |photo, index| %>
                            <div class="edit-image-container old-image-container" data-file-name="<%= photo.filename.to_s %>">
                                <%= image_tag photo.variant(resize_to_fill: [200, 200]).processed, class: "preview-image prev-image" %>
                                <div class="purge-attachment-icon-btn" data-url="<%= purge_chapter_attachment_path(photo.id) %>">
                                  <%= image_tag "icons/delete_icon.png", alt: "Delete Icon", class: "purge-chap-icon" %>
                                </div>
                            </div>
                          <% end %>
                        </div>
                        <div class="upload-attachment-block flex flex-col justify-center items-center">
                          <span class="text-center">Faites glisser ou appuyez pour ajouter vos photos</span>
                          <div class="upload-attachment-circle mt-2" id="customUploadButtonPhotos">
                            <span class="plus-sign">+</span>
                          </div>
                          <%= f.file_field "chapters[#{chapter.id}][photos]", multiple: true, accept: 'image/*', class: 'form-control', style: 'display: none;', id: 'fileUploadInputPhotos' %>
                        </div>

                      <div class="music-selection w-full">
                        <% selected_music_id = chapter.video_music&.music_id %>
                        <%= f.select "chapters[#{chapter.id}][music_id]", @musics.map { |music| [music.name, music.id] }, { include_blank: 'Sélectionnez une musique', selected: selected_music_id }, { class: 'music-select w-full br-10' } %>
                      </div>
                    </div>
                      <%= f.hidden_field "chapters[#{chapter.id}][photos_order]", id: "images_order_#{chapter.id}" %>
                      <%= f.hidden_field "chapters[#{chapter.id}][videos_order]", id: "videos_order_#{chapter.id}" %>
                  </div>
                </dialog>
              </div>



              <% if chapter.chapter_type.image.attached? %>
                <%= image_tag chapter.chapter_type.image, class: "preview-image prev-image preview-prof-img" %>
              <% end %>

            </div>

          </div>
        <% end %>

      </div>
      <input type="hidden" name="chapter_order" id="chapter_order" />
      <div class="video-steps w-full">
        <%= link_to "Ajouter un chapitre", go_to_select_chapters_path, class: "cta-transparent", data: {turbo: false} %>
        <%= f.submit "Confirmer les modifications", class: "cta" %>
      </div>
    </div>



  <% end %>

  <div class="video-steps">
    <%= render "videos/shared/back_button" %>
    <%= link_to "Enregistrer et payer", skip_edit_video_path, class: "cta", data: {turbo: false} %>
  </div>


</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.15.0/Sortable.min.js"></script>
<script>
document.addEventListener("DOMContentLoaded", function () {
  const customUploadButtonVideos = document.getElementById("customUploadButtonVideos");
  const customUploadButtonPhotos = document.getElementById("customUploadButtonPhotos");
  const fileUploadInputVideos = document.getElementById("fileUploadInputVideos");
  const fileUploadInputPhotos = document.getElementById("fileUploadInputPhotos");

  customUploadButtonVideos.addEventListener("click", () => {
    fileUploadInputVideos.click();
  });
  customUploadButtonPhotos.addEventListener("click", () => {
    fileUploadInputPhotos.click();
  });

  fileUploadInputVideos.addEventListener("change", (event) => {
    const fileName = event.target.files[0]?.name;
    if (fileName) {
      customUploadButtonVideos.querySelector(".plus-sign").textContent = "✔";
    }
  });

  fileUploadInputPhotos.addEventListener("change", (event) => {
    const fileName = event.target.files[0]?.name;
    if (fileName) {
      customUploadButtonPhotos.querySelector(".plus-sign").textContent = "✔";
    }
  });

  // Initialize Sortable for chapter list reordering
  const chaptersList = document.getElementById("chapters-list");
  const chapterOrderInput = document.getElementById("chapter_order");

  if (chaptersList) {
    new Sortable(chaptersList, {
      animation: 150,
      onEnd: function () {
        // Update the order of chapter IDs
        const order = Array.from(chaptersList.children).map((item) =>
          item.getAttribute("data-id")
        );
        chapterOrderInput.value = order.join(",");
      },
    });
  }

  // Handle delete chapter button click
  document.addEventListener("click", (event) => {
    const deleteButton = event.target.closest(".delete-chap-icon-btn");
    if (deleteButton) {
      const url = deleteButton.dataset.url;
      const confirmation = deleteButton.dataset.confirm;

      if (confirm(confirmation)) {
        fetch(url, {
          method: "DELETE",
          headers: {
            "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content,
            Accept: "application/json",
            "Content-Type": "application/json",
          },
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.message) {
              window.location.reload();
            } else {
              alert("Failed to delete the chapter. Please try again.");
            }
          })
          .catch((error) => {
            console.error("Error:", error);
            alert("An error occurred. Please try again.");
          });
      }
    }

    // Handle attachment purge button click (for photos and videos)
    const purgeButton = event.target.closest(".purge-attachment-icon-btn");
    const csrfToken = document.querySelector('meta[name="csrf-token"]').content;
    if (purgeButton) {
      const url = purgeButton.dataset.url;
      const confirmation = "Are you sure you want to delete this attachment?";

      if (confirm(confirmation)) {
        fetch(url, {
          method: "DELETE",
          headers: {
            "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content,
            "Accept": "application/json",
            "Content-Type": "application/json",
          },
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.message) {
              // Remove the attachment container from the DOM
              purgeButton.closest(".edit-image-container, .edit-video-container").remove();
            } else {
              alert("Failed to delete the attachment. Please try again.");
            }
          })
          .catch((error) => {
            console.error("Error:", error);
            alert("An error occurred. Please try again.");
          });
      }
    }
  });
});
</script>